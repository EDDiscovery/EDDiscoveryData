ACTIONFILE V4

ENABLED True

INSTALL LongDescription="This is the third edition of the Free Voice Control pack for EDD, for version 10.5+\r\n\r\nFree voice control allows you to control Elite from your microphone.  It comes with a set of preconfigured voice commands which automatically bind to your control setup in Elite (as long as a keyboard action is associated with it).  \r\n\r\nYou can ask for landing gear to be deployed, ask for the galaxy map to be shown, adjust your power settings - all by voice!  There are over 130+ commands so far.\r\n\r\nInstall for free today!"
INSTALL ShortDescription="Free Voice Control"
INSTALL Version=3.2.0.0
INSTALL MinEDVersion=10.5.1.0
INSTALL Location=Actions
INSTALL DisableOther1=FreeVoiceControlV1
INSTALL DisableOther2=FreeVoiceControlV2

GROUP Defense
EVENT onVoiceInput, VoiceInput_Shield_Cell, "", VoiceInput MatchSemicolonList "[Fire]|Charge|Deploy Shield Cell;Recharge Shields"
EVENT onVoiceInput, VoiceInput_Chaff, "", VoiceInput MatchSemicolonList "Launch|Fire Chaff"
EVENT onVoiceInput, VoiceInput_Heat_Sink, "", VoiceInput MatchSemicolonList "Deploy|Fire|Launch|[] Heat Sink"
EVENT onVoiceInput, VoiceInput_Charge_ECM, "", VoiceInput MatchSemicolonList "Charge|Deploy|Fire ECM"

GROUP Flight
EVENT onVoiceInput, VoiceInput_Toggle_Flight_Assist, "", VoiceInput MatchSemicolonList "Assist Toggle"
EVENT onVoiceInput, VoiceInput_Flight_Assist_On, "", VoiceInput MatchSemicolonList "[Flight] Assist On;FlightAssist On"
EVENT onVoiceInput, VoiceInput_Flight_Assist_Off, "", VoiceInput MatchSemicolonList "[Flight] Assist Off;FlightAssist Off"
EVENT onVoiceInput, VoiceInput_Boost, "", VoiceInput MatchSemicolonList Boost
EVENT onVoiceInput, VoiceInput_Hyperspace, "", VoiceInput MatchSemicolonList "Hyperspace;Jump;Warp Drive"
EVENT onVoiceInput, VoiceInput_Drop, "", VoiceInput MatchSemicolonList "Drop;Normal Space"
EVENT onVoiceInput, VoiceInput_Supercruise, "", VoiceInput MatchSemicolonList Supercruise
EVENT onVoiceInput, VoiceInput_Minus100, "", VoiceInput MatchSemicolonList "Thull|Full Astern;Full Reverse;Reverse Thrust"
EVENT onVoiceInput, VoiceInput_Minus75, "", VoiceInput MatchSemicolonList "Seventy Five [Percent] Astern;Three Quarters Astern"
EVENT onVoiceInput, VoiceInput_Minus50, "", VoiceInput MatchSemicolonList "Fifty [Percent] Astern;Half Astern;Half Reverse"
EVENT onVoiceInput, VoiceInput_Minus25, "", VoiceInput MatchSemicolonList "Twenty Five [Percent] Astern;Quarter Reverse"
EVENT onVoiceInput, VoiceInput_Stop, "", VoiceInput MatchSemicolonList "Thull|Full Stop;Dead Stop;Halt|Stop Ship"
EVENT onVoiceInput, VoiceInput_25, "", VoiceInput MatchSemicolonList "Twenty Five [Percent] Ahead;Quarter Power;One Quarter Power;Twenty Five;One Quarter"
EVENT onVoiceInput, VoiceInput_50, "", VoiceInput MatchSemicolonList "Fifty [Percent] Ahead;Half Power;Fifty"
EVENT onVoiceInput, VoiceInput_75, "", VoiceInput MatchSemicolonList "Seventy Five [Percent] Ahead;Three Quarters Power;Seventy Five;Three Quarters;Cruise Speed"
EVENT onVoiceInput, VoiceInput_100, "", VoiceInput MatchSemicolonList "Thull|Full Ahead;Thull|Full Forward;Maximum Speed; Thull|Full Thrust;Maximum Thrust"
EVENT onVoiceInput, VoiceInput_NightVision, "", VoiceInput MatchSemicolonList "Night Vision;Vision On;Vision Off;"

GROUP Targeting
EVENT onVoiceInput, VoiceInput_Select_Target, "", VoiceInput MatchSemicolonList "Select Target;Target Select;Target"
EVENT onVoiceInput, VoiceInput_Next_Target, "", VoiceInput MatchSemicolonList "[Select] Next Target"
EVENT onVoiceInput, VoiceInput_Previous_target, "", VoiceInput MatchSemicolonList "[Select] Previous Target"
EVENT onVoiceInput, VoiceInput_Highest_Threat, "", VoiceInput MatchSemicolonList "Highest Threat|Hostile"
EVENT onVoiceInput, VoiceInput_Next_Hostile, "", VoiceInput MatchSemicolonList "[Select] Next Hostile"
EVENT onVoiceInput, VoiceInput_Previous_Hostile, "", VoiceInput MatchSemicolonList "[Select] Previous Hostile"
EVENT onVoiceInput, VoiceInput_Target_Wing_man_1, "", VoiceInput MatchSemicolonList "Target Wing man one;Primary Wing man"
EVENT onVoiceInput, VoiceInput_Target_Wing_man_2, "", VoiceInput MatchSemicolonList "Target Wing man two;Secondary Wing man"
EVENT onVoiceInput, VoiceInput_Target_Wing_man_3, "", VoiceInput MatchSemicolonList "Target Wing man three;Tertiary Wing man"
EVENT onVoiceInput, VoiceInput_Select_Wing_man_target, "", VoiceInput MatchSemicolonList "Select Wing man target;Wing man target"
EVENT onVoiceInput, VoiceInput_Wingman_Nav_Lock, "", VoiceInput MatchSemicolonList "[Wingman] Nav Lock"
EVENT onVoiceInput, VoiceInput_Next_Subsystem, "", VoiceInput MatchSemicolonList "[Select] Next Subsystem"
EVENT onVoiceInput, VoiceInput_Previous_Subsystem, "", VoiceInput MatchSemicolonList "[Select] previous subsystem"
EVENT onVoiceInput, VoiceInput_Next_Fire_Group, "", VoiceInput MatchSemicolonList "[Next] Fire Group;Next Group"
EVENT onVoiceInput, VoiceInput_Previous_Fire_Group, "", VoiceInput MatchSemicolonList "Previous Fire Group;Previous Group"
EVENT onVoiceInput, VoiceInput_ScanSystem, "", VoiceInput MatchSemicolonList "Scan System"

GROUP Weapons
EVENT onVoiceInput, VoiceInput_Deploy_Weapons, "", VoiceInput MatchSemicolonList "Deploy Weapons|Hardpoints;Deploy"
EVENT onVoiceInput, VoiceInput_Retract_Weapons, "", VoiceInput MatchSemicolonList "Retract Weapons|Hardpoints;Retract;Weapons Away"

GROUP Sensors
EVENT onVoiceInput, VoiceInput_Increase_Radar_Range, "", VoiceInput MatchSemicolonList "Increase Radar|Sensor [Range]"
EVENT onVoiceInput, VoiceInput_Decrease_Radar_Range, "", VoiceInput MatchSemicolonList "Decrease Radar|Sensor [Range]"
EVENT onVoiceInput, VoiceInput_Long_Range_Scan, "", VoiceInput MatchSemicolonList "[Scanner] Long|Maximum Range"
EVENT onVoiceInput, VoiceInput_Short_Range_Scan, "", VoiceInput MatchSemicolonList "[Scanner] Short|Maximum Range"
EVENT onVoiceInput, VoiceInput_Medium_Range_Scan, "", VoiceInput MatchSemicolonList "[Scanner] Medium|Maximum Range"

GROUP UI
EVENT onVoiceInput, VoiceInput_Systems_Panel, "", VoiceInput MatchSemicolonList "[Open] Systems Panel"
EVENT onVoiceInput, VoiceInput_Target_Panel, "", VoiceInput MatchSemicolonList "[Open] Target Panel"
EVENT onVoiceInput, VoiceInput_Role_Panel, "", VoiceInput MatchSemicolonList "[Open] Role Panel"
EVENT onVoiceInput, VoiceInput_Communication_Panel, "", VoiceInput MatchSemicolonList "[Open] Communication Panel;[Open] Comms Panel"
EVENT onVoiceInput, VoiceInput_Close_Panel, "", VoiceInput MatchSemicolonList "Close Panel;Focus;Front View"
EVENT onVoiceInput, VoiceInput_Quick_Comms, "", VoiceInput MatchSemicolonList "[Open] Quick Comms"
EVENT onVoiceInput, VoiceInput_Open_Galaxy_Map, "", VoiceInput MatchSemicolonList "[Open] Galaxy Map"
EVENT onVoiceInput, VoiceInput_Close_Galaxy_Map, "", VoiceInput MatchSemicolonList "Close Galaxy Map"
EVENT onVoiceInput, VoiceInput_Open_System_Map, "", VoiceInput MatchSemicolonList "[Open] System Map"
EVENT onVoiceInput, VoiceInput_Close_System_Map, "", VoiceInput MatchSemicolonList "Close System Map"
EVENT onVoiceInput, VoiceInput_Head_Look, "", VoiceInput MatchSemicolonList "Head Look On|Off"
EVENT onVoiceInput, VoiceInput_Game_Menu, "", VoiceInput MatchSemicolonList "[Open] Game Menu"
EVENT onVoiceInput, VoiceInput_Friends_Menu, "", VoiceInput MatchSemicolonList "[Open] Friends Menu"
EVENT onVoiceInput, VoiceInput_Next_Panel, "", VoiceInput MatchSemicolonList "Next Panel"
EVENT onVoiceInput, VoiceInput_Previous_Panel, "", VoiceInput MatchSemicolonList "Previous Panel"

GROUP Headlook
EVENT onVoiceInput, VoiceInput_Head_Look_Reset, "", VoiceInput MatchSemicolonList "Head Look Reset;Look Forward"
EVENT onVoiceInput, VoiceInput_Head_Look_Up, "", VoiceInput MatchSemicolonList "View Up"
EVENT onVoiceInput, VoiceInput_Head_Look_Down, "", VoiceInput MatchSemicolonList "View Down"
EVENT onVoiceInput, VoiceInput_Head_Look_Left, "", VoiceInput MatchSemicolonList "View Left"
EVENT onVoiceInput, VoiceInput_Head_Look_Right, "", VoiceInput MatchSemicolonList "View Right"
EVENT onVoiceInput, VoiceInput_Head_Look_FullLeft, "", VoiceInput MatchSemicolonList "Look Left"
EVENT onVoiceInput, VoiceInput_Head_Look_FullRight, "", VoiceInput MatchSemicolonList "Look Right"
EVENT onVoiceInput, VoiceInput_Head_Look_FullUp, "", VoiceInput MatchSemicolonList "Look Up"

GROUP SRV
EVENT onVoiceInput, VoiceInput_Recall_Ship, "", VoiceInput MatchSemicolonList "Recall Ship"
EVENT onVoiceInput, VoiceInput_Dismiss_Ship, "", VoiceInput MatchSemicolonList "Dismiss Ship"
EVENT onVoiceInput, VoiceInput_Toggle_Drive_Assist, "", VoiceInput MatchSemicolonList "Toggle Drive Assist"
EVENT onVoiceInput, VoiceInput_Drive_Assist_On, "", VoiceInput MatchSemicolonList "Drive Assist On"
EVENT onVoiceInput, VoiceInput_Drive_Assist_Off, "", VoiceInput MatchSemicolonList "Drive Assist Off"
EVENT onVoiceInput, VoiceInput_Toggle_Handbrake_Assist, "", VoiceInput MatchSemicolonList "Toggle [Hand] brake"
EVENT onVoiceInput, VoiceInput_Handbrake_Assist_On, "", VoiceInput MatchSemicolonList "[Hand] brake On"
EVENT onVoiceInput, VoiceInput_Handbrake_Assist_Off, "", VoiceInput MatchSemicolonList "[Hand] brake Off"
EVENT onVoiceInput, VoiceInput_Toggle_Headlights, "", VoiceInput MatchSemicolonList "Head Lights Toggle"
EVENT onVoiceInput, VoiceInput_Headlights_On, "", VoiceInput MatchSemicolonList "Head Lights on"
EVENT onVoiceInput, VoiceInput_Headlights_Off, "", VoiceInput MatchSemicolonList "Head Lights off"
EVENT onVoiceInput, VoiceInput_Toggle_Turret, "", VoiceInput MatchSemicolonList "Toggle Turret;Turret Toggle"
EVENT onVoiceInput, VoiceInput_Turret_On, "", VoiceInput MatchSemicolonList "Enter Turret"
EVENT onVoiceInput, VoiceInput_Turret_Off, "", VoiceInput MatchSemicolonList "Leave Turrent"

GROUP Fighters
EVENT onVoiceInput, VoiceInput_Fighter_Dock, "", VoiceInput MatchSemicolonList "Fighter Dock"
EVENT onVoiceInput, VoiceInput_Fighter_Defensive, "", VoiceInput MatchSemicolonList "Fighter Defensive"
EVENT onVoiceInput, VoiceInput_Fighter_Aggressive, "", VoiceInput MatchSemicolonList "Fighter Agressive"
EVENT onVoiceInput, VoiceInput_Fighter_Target, "", VoiceInput MatchSemicolonList "Fighter Target;Focus on Target"
EVENT onVoiceInput, VoiceInput_Fighter_HoldFire, "", VoiceInput MatchSemicolonList "[Fighter] hold fire"
EVENT onVoiceInput, VoiceInput_Fighter_HoldPosition, "", VoiceInput MatchSemicolonList "[Fighter] hold position"
EVENT onVoiceInput, VoiceInput_Fighter_Follow, "", VoiceInput MatchSemicolonList "Fighter Follow;Follow me"
EVENT onVoiceInput, VoiceInput_Fighter_Open, "", VoiceInput MatchSemicolonList "[Fighter] Open orders"
EVENT onVoiceInput, VoiceInput_Ship_Defensive, "", VoiceInput MatchSemicolonList "Ship Defensive"
EVENT onVoiceInput, VoiceInput_Ship_Aggressive, "", VoiceInput MatchSemicolonList "Ship Agressive"
EVENT onVoiceInput, VoiceInput_Ship_Target, "", VoiceInput MatchSemicolonList "Ship Focus on Target"
EVENT onVoiceInput, VoiceInput_Ship_HoldFire, "", VoiceInput MatchSemicolonList "Ship hold fire"
EVENT onVoiceInput, VoiceInput_Ship_HoldPosition, "", VoiceInput MatchSemicolonList "Ship hold position"
EVENT onVoiceInput, VoiceInput_Ship_Follow, "", VoiceInput MatchSemicolonList "Ship Follow;Ship Follow me"
EVENT onVoiceInput, VoiceInput_Ship_Open, "", VoiceInput MatchSemicolonList "Ship Open orders"

GROUP Power Control
EVENT onVoiceInput, VoiceInput_Increase_Engine_Power, "", VoiceInput MatchSemicolonList "Increase|More Engine Power;More Engines;Engines Up;Increase Engines"
EVENT onVoiceInput, VoiceInput_Increase_Weapons_Power, "", VoiceInput MatchSemicolonList "Increase|More Engine Weapons;More Weapons;Weapons Up;Increase Weapons"
EVENT onVoiceInput, VoiceInput_Increase_Systems_Power, "", VoiceInput MatchSemicolonList "Increase|More Shield Power;More Shields;Shields Up;Increase Shields;More|Increase Systems Power"
EVENT onVoiceInput, VoiceInput_Reset_Power, "", VoiceInput MatchSemicolonList "Reset Power"
EVENT onVoiceInput, VoiceInput_Weapons_WS, "", VoiceInput MatchSemicolonList "Weapons and Shields;Shields and Weapons"
EVENT onVoiceInput, VoiceInput_Weapons_SpeedAttack, "", VoiceInput MatchSemicolonList "Speed Attack"
EVENT onVoiceInput, VoiceInput_Weapons_MaxWeapons, "", VoiceInput MatchSemicolonList "Maximum Weapons;Weapons;Weapons Maximum"
EVENT onVoiceInput, VoiceInput_Weapons_MaxShields, "", VoiceInput MatchSemicolonList "Maximum Shields;Shields;Shields Maximum"
EVENT onVoiceInput, VoiceInput_Weapons_MaxEngines, "", VoiceInput MatchSemicolonList "Maximum Engines;Engines;Engines Maximum"
EVENT onVoiceInput, VoiceInput_Weapons_Balanced, "", VoiceInput MatchSemicolonList "Balanced Attack"
EVENT onVoiceInput, VoiceInput_Weapons_AttackMode, "", VoiceInput MatchSemicolonList "Attack Mode;Attack Power;Power Attack"
EVENT onVoiceInput, VoiceInput_Weapons_FastAttack, "", VoiceInput MatchSemicolonList "Fast Attack"
EVENT onVoiceInput, VoiceInput_Escape, "", VoiceInput MatchSemicolonList Escape;Emergency
EVENT onVoiceInput, VoiceInput_Landing_GearToggle, "", VoiceInput MatchSemicolonList "[Toggle] Landing Gear"
EVENT onVoiceInput, VoiceInput_Landing_GearDown, "", VoiceInput MatchSemicolonList "[Landing] Gear Down"
EVENT onVoiceInput, VoiceInput_Landing_GearUp, "", VoiceInput MatchSemicolonList "[Landing] Gear Up"
EVENT onVoiceInput, VoiceInput_Lights_On, "", VoiceInput MatchSemicolonList "[Ship] Lights On"
EVENT onVoiceInput, VoiceInput_Lights_Off, "", VoiceInput MatchSemicolonList "[Ship] Lights Off"
EVENT onVoiceInput, VoiceInput_Lights_Toggle, "", VoiceInput MatchSemicolonList "Lights Toggle;Toggle ship lights"
EVENT onVoiceInput, VoiceInput_Deploy_Cargo_Scoop, "", VoiceInput MatchSemicolonList "Deploy|Lower [Cargo] Scoop"
EVENT onVoiceInput, VoiceInput_Retract_Cargo_Scoop, "", VoiceInput MatchSemicolonList "Retract|Raise|Retract [Cargo] Scoop"
EVENT onVoiceInput, VoiceInput_Microphone_Mute, "", VoiceInput MatchSemicolonList "Microphone Mute;Mute Microphone"
EVENT onVoiceInput, VoiceInput_Toggle_Weapons_Colour, "", VoiceInput MatchSemicolonList "Toggle Weapons Colour|Color"
EVENT onVoiceInput, VoiceInput_Toggle_Engine_Colour, "", VoiceInput MatchSemicolonList "Toggle Engine Colour|Color"
EVENT onVoiceInput, VoiceInput_Toggle_Orbit_Lines, "", VoiceInput MatchSemicolonList "[Toggle] Orbit Lines;Orbit Lines on|off"
EVENT onVoiceInput, VoiceInput_Rotational_Correction_Toggle, "", VoiceInput MatchSemicolonList "Rotational Correction Toggle|On|Off"
EVENT onVoiceInput, VoiceInput_Resume_Route, "", VoiceInput MatchSemicolonList "Resume|Replot Route"
EVENT onVoiceInput, VoiceInput_Silent_Running, "", VoiceInput MatchSemicolonList "Silent Running On|Off"
EVENT onVoiceInput, VoiceInput_Reset_Head_Position, "", VoiceInput MatchSemicolonList "Reset Head Position"
EVENT onVoiceInput, VoiceInput_Screenshot, "", VoiceInput MatchSemicolonList "Take Photo;[Take] Screen shot"

GROUP Camera
EVENT onVoiceInput, VoiceInput_Camera, "", VoiceInput MatchSemicolonList "Toggle Camera [Mode];Camera On|Off|Mode"
EVENT onVoiceInput, VoiceInput_Camera_Free, "", VoiceInput MatchSemicolonList "[Toggle]|Enter Free [Camera] Mode"
EVENT onVoiceInput, VoiceInput_Camera_PreviousCam, "", VoiceInput MatchSemicolonList "Previous Camera"
EVENT onVoiceInput, VoiceInput_Camera_NextCam, "", VoiceInput MatchSemicolonList "Next Camera"
EVENT onVoiceInput, VoiceInput_Camera_One, "", VoiceInput MatchSemicolonList "Camera One;Front Cockpit Camera"
EVENT onVoiceInput, VoiceInput_Camera_Two, "", VoiceInput MatchSemicolonList "Camera Two;Rear Cockpit Camera"
EVENT onVoiceInput, VoiceInput_Camera_Three, "", VoiceInput MatchSemicolonList "Camera Three;Pilot Camera"
EVENT onVoiceInput, VoiceInput_Camera_Four, "", VoiceInput MatchSemicolonList "Camera Four;Secondary Pilot Camera"
EVENT onVoiceInput, VoiceInput_Camera_Five, "", VoiceInput MatchSemicolonList "Camera Five;[Co] Pilot One Camera"
EVENT onVoiceInput, VoiceInput_Camera_Six, "", VoiceInput MatchSemicolonList "Camera Six;[Co] Pilot Two Camera"
EVENT onVoiceInput, VoiceInput_Camera_Seven, "", VoiceInput MatchSemicolonList "Camera Seven;Front Camera"
EVENT onVoiceInput, VoiceInput_Camera_Eight, "", VoiceInput MatchSemicolonList "Camera Eight;Rear Camera"
EVENT onVoiceInput, VoiceInput_Camera_Nine, "", VoiceInput MatchSemicolonList "Camera Nine;Low [Rear] Camera"
EVENT onVoiceInput, VoiceInput_Camera_Hud, "", VoiceInput MatchSemicolonList "Toggle HUD;Toggle Head Up Display"
EVENT onVoiceInput, VoiceInput_Camera_IncrSpeed, "", VoiceInput MatchSemicolonList "Increase Camera Speed"
EVENT onVoiceInput, VoiceInput_Camera_DecrSpeed, "", VoiceInput MatchSemicolonList "Decrease Camera Speed"
EVENT onVoiceInput, VoiceInput_Camera_Stabiliser, "", VoiceInput MatchSemicolonList "Toggle Camera Stabiliser|Stabilizer"
EVENT onVoiceInput, VoiceInput_Camera_ShipControls, "", VoiceInput MatchSemicolonList "Toggle Camera Ship Controls"
EVENT onVoiceInput, VoiceInput_Camera_Attach, "", VoiceInput MatchSemicolonList "Toggle Camera [World] Attach|World"
EVENT onVoiceInput, VoiceInput_Camera_ExitFree, "", VoiceInput MatchSemicolonList "Exit Free Camera"
EVENT onVoiceInput, VoiceInput_Camera_IncrZoom, "", VoiceInput MatchSemicolonList "Increase [Camera] Zoom; Zoom Camera In"
EVENT onVoiceInput, VoiceInput_Camera_DecrZoom, "", VoiceInput MatchSemicolonList "Decrease [Camera] Zoom;Zoom Camera Out"
EVENT onVoiceInput, VoiceInput_Camera_IncrBlur, "", VoiceInput MatchSemicolonList "Increase [Camera] Blur"
EVENT onVoiceInput, VoiceInput_Camera_DecrBlur, "", VoiceInput MatchSemicolonList "Decrease [Camera] Blur"

GROUP PopOuts
EVENT onVoiceInput, VoiceInput_Summary_Panel_toggle, "", VoiceInput MatchSemicolonList "Toggle Summary Panel"
EVENT onVoiceInput, VoiceInput_Summary_Panel_on, "", VoiceInput MatchSemicolonList "Summary Panel On"
EVENT onVoiceInput, VoiceInput_Summary_Panel_off, "", VoiceInput MatchSemicolonList "Summary Panel Off"
EVENT onVoiceInput, VoiceInput_Trippanel_Panel_toggle, "", VoiceInput MatchSemicolonList "Toggle Trip Panel"
EVENT onVoiceInput, VoiceInput_Trippanel_Panel_on, "", VoiceInput MatchSemicolonList "Trip Panel On"
EVENT onVoiceInput, VoiceInput_Trippanel_Panel_off, "", VoiceInput MatchSemicolonList "Trip Panel Off"
EVENT onVoiceInput, VoiceInput_Notepanel_Panel_toggle, "", VoiceInput MatchSemicolonList "Toggle Note Panel"
EVENT onVoiceInput, VoiceInput_Notepanel_Panel_on, "", VoiceInput MatchSemicolonList "Note Panel On"
EVENT onVoiceInput, VoiceInput_Notepanel_Panel_off, "", VoiceInput MatchSemicolonList "Note Panel Off"
EVENT onVoiceInput, VoiceInput_RouteTracker_Panel_toggle, "", VoiceInput MatchSemicolonList "Toggle Route Tracker"
EVENT onVoiceInput, VoiceInput_RouteTracker_Panel_on, "", VoiceInput MatchSemicolonList "Route Tracker On"
EVENT onVoiceInput, VoiceInput_RouteTracker_Panel_off, "", VoiceInput MatchSemicolonList "Route Tracker Off"

GROUP Initialisation
EVENT onStartup, onStartup, "", Condition AlwaysTrue
EVENT onPostStartup, onPostStartup, "", Condition AlwaysTrue
EVENT onInstall, onInstall, "", Condition AlwaysTrue
EVENT onMenuItem, Menus, "", MenuName Contains FVC
EVENT onVoiceInputFailed, VoiceInput_Failed, "", Condition AlwaysTrue
EVENT onTimer, ScanSystemTimer, "", TimerName $== ScanSystemTimer

//*************************************************************
// onStartup
// Events: onStartup
//*************************************************************
PROGRAM onStartup

Call Initialise

END PROGRAM

//*************************************************************
// onPostStartup
// Events: onPostStartup
//*************************************************************
PROGRAM onPostStartup

MenuItem VoiceMenuConfigureVoice                                // see of voice menu installed.. do this on post install since voice pack gets the priority
If MenuPresent IsFalse
    MenuItem FVCConfigureVoice,add-ons,"Voice Synthesis Configuration",speaker

END PROGRAM

//*************************************************************
// onInstall
// Events: onInstall
//*************************************************************
PROGRAM onInstall

If InstallList Contains FreeVoiceControl
    Static SpeechCulture = en-gb
    Static say_install $= You have installed Free Voice Control
    Say %(say_install)
    Call Initialise
    MessageBox "Welcome to Free Voice Control\r\n\r\nThis pack allows you to use voice commands to control Elite.  You can order landing gear up, hyperspace,\r\nlights on etc.\r\n\r\nYou can find all the commands supported by using Help | Free Voice Control Help menu option.\r\n\r\nYou need to make sure any commands you want to say has an equivalent key binding in Elite Dangerous.\r\nA joystick binding won't work, it needs to be a keyboard key (due to Windows limitations).\r\nEDD will warn you if it can't find a key binding for a particular phrase - check the log window.\r\n\r\nEDD reads the keybindings file at startup.  If you change them in Elite, for now just restart EDD to\r\npick the new ones up.\r\n\r\nWindows voice recognitions is very sensitive to the following:\r\n\r\n* That you trained your voice (use Control Panel | Sound (Win7) or Speech Recognition (Win10)) to train it\r\n* That you have the right volume level for your microphone (Control Panel | Sound, click on the mic and set the levels)\r\n* That there is minimum other noise the microphone can hear\r\n\r\nGetting it set up right can sometimes be a bit of a challenge.\r\n\r\nCurrently the voice pack supports only the default recording device, set this in Control Panel | Sound | Recording\r\n\r\nYou may want to enable in the Free Voice Control Configuration the \"Show failed voice recognition\" and see what its listening\r\nto in the log window.\r\n\r\nEnjoy.\r\n\r\nPS. Soon a standalone FVC program will be released - watch out for that.\r\n", "Free Voice Control", OK

END PROGRAM

//*************************************************************
// Initialise
//*************************************************************
PROGRAM Initialise

Static SpeechCulture = en-gb

Static TagAnnounciate = AnnounciateError;
Static TagWelcome = WelcomeDisable;
Static TagShowFailed = ShowFailed;
Static TagDisableSpeech = SpeechOff;
Static DontSpeak = 1

If FVCControls NotPresent
    Print ****
    Print Setting voice recognition pack control to default values, use the Add-On menu Voice Recongnition Pack Configuration to reconfigure
    Print ****
    PersistentGlobal FVCControls = %(TagAnnounciate)
    PersistentGlobal FVCConfidence = 94
    PersistentGlobal FVCTarget = elitedangerous64
    PersistentGlobal FVCSilentError = Report Once
    PersistentGlobal FVCEndTimeout = 150
    PersistentGlobal FVCEndTimeoutAmbiguous = 500

If FVCControls NotContains %(TagWelcome)
    Static say_welcome $= Free Voice Control running
    Say %(say_welcome)

Static SpeechPriority = Low                                     // anything else going on, don't add to speech queue.  Do this after loading

Perform EnableVoiceRecognition %(SpeechCulture)
Perform VoiceRecognitionParameters 0,0,%(FVCEndTimeout),%(FVCEndTimeoutAmbiguous)
Perform VoiceRecognitionConfidenceLevel %eval('%(FVCConfidence)/100.0')
Perform BeginVoiceRecognition

MenuItem FVCMenuConfigure,add-ons,"Free Voice Control Configuration",speaker
MenuItem FVCMenuShowHelp,help,"Free Voice Control Help",speaker
MenuItem FVCMenuEditPack,add-ons,"Free Voice Control Edit Phrases",speaker
MenuItem FVCMenuBindings,help,"List Elite Bindings",settings

Static KeyProcessTo = %(FVCTarget)                              // programs using Key in here pick up global KeyProcessTo, set it to the perisistent for ours
Static KeyDelay = 20

Call SetKeyVariables

Print Voice Recognition Pack running.

If FVCControls Contains %(TagDisableSpeech)                     // global speech disable
    Print WARNING - Free Voice Control is configured to disable all speech output.  Reenable via Add On menu
    Static SpeechDisable = 1

END PROGRAM

//*************************************************************
// SetKeyVariables
//*************************************************************
PROGRAM SetKeyVariables

Static KeyAnnounciateOnError = %IsPresent(FVCControls,TagAnnounciate,0)
If FVCSilentError $== "Report Once"
    Static KeySilentOnError = 1
Else If FVCSilentError $== "Never Report"
    Static KeySilentOnError = 2
Else 
    Static KeySilentOnError = 0

END PROGRAM

//*************************************************************
// Menus
// Events: onMenuItem?(MenuName Contains FVC)
//*************************************************************
PROGRAM Menus

If MenuName Contains FVCConfigureVoice
    Perform ConfigureVoice "Configure Voice Synthesis"

If MenuName Contains EditPack
    Perform EditPack %(ActionPackName)

If MenuName Contains ShowHelp
    Set help = Free Voice Control For EDDiscovery (C) EDDiscovery Team\r\n\r\n
    Set help += Use Add-Ons | Manage to enable or disable this pack\r\n\r\n
    Set help += Use the FVC configuration options in the Add-Ons menu to configure the pack\r\n\r\n
    Set help += Use the Voice synthesis configuration options in the Add-Ons menu to configure the voice output\r\n\r\n
    Set help += Free Voice Control understands the following phrases:\r\n\r\n
    Perform VoiceRecognitionPhrases
    Set help += %(Phrases)
    InfoBox "%replaceescapechar(help)","Free Voice Control Help"

If MenuName Contains Bindings
    Perform Bindings
    InfoBox "%replaceescapechar(Bindings)","Elite Bindings"

If MenuName Contains FVCMenuConfigure

    Set height = 500
    Set Col1 = 150

    Set dvar1a = "L2,Label,\"MinConfidence%\",10,+50,120,20,\"\""
    Set dvar1b = "TBCONF,TextBox,\"%existsdefault(FVCConfidence,'96')\",%(Col1),+0,230,20,\"Set confidence level to accept speech input at, in %\""

    Set dvar2a = "L3,Label,\"Elite Process\",10,+40,120,20,\"\""
    Set dvar2b = "TBPROC,TextBox,\"%existsdefault(FVCTarget,'elitedangerous64.exe')\",%(Col1),+0,230,20,\"Set process to send key strokes to (normally EliteDangerous)\""

    Set dvar3a = "L3,Label,\"Errors\",10,+40,120,20,\"\""
    Set dvar3b = "CBERR,ComboBox,\"%ExistsDefault(FVCSilentError,'Report Once')\",%(Col1),+0,230,20,\"Select what happens if an error occurs such as a key binding not being present\",Report Always,Report Once,Never Report"

    Set dvar4a = "L3,Label,\"Errors\",10,+40,120,20,\"\""
    Set dvar4b = "CBANN,CheckBox,\"Announciate Errors\",%(Col1),+0,200,20,\"If an error occurs, speak the error\",%IsPresent(FVCControls,TagAnnounciate,0)"

    Set dvar41a = "L3,Label,\"Speech\",10,+40,120,20,\"\""
    Set dvar41b = "CBSPK,CheckBox,\"Disable Speech Output\",%(Col1),+0,200,20,\"Disable all speech output\",%IsPresent(FVCControls,TagDisableSpeech,0)"

    Set dvar5a = "L3,Label,\"General\",10,+40,120,20,\"\""
    Set dvar5b = "CBWEL,CheckBox,\"Disable Welcome Message\",%(Col1),+0,400,20,\"Disable the welcome voice message\",%IsPresent(FVCControls,TagWelcome,0)"
    Set dvar5c = "CBFAIL,CheckBox,\"Show failed voice recognition\",%(Col1),+30,400,20,\"Show any failed voice recognition attempts\",%IsPresent(FVCControls,TagShowFailed,0)"

    Set dvar6a = "L2,Label,\"End Timeout\",10,+40,120,20,\"\""
    Set dvar6b = "TBET,TextBox,\"%existsdefault(FVCEndTimeout,'150')\",%(Col1),+0,220,20,\"Time to wait if speech is unambigious before recognising the phrase (ms)\""
    Set dvar7a = "L2,Label,\"Amb. Timeout\",10,+40,120,20,\"\""
    Set dvar7b = "TBETA,TextBox,\"%existsdefault(FVCEndTimeoutAmbiguous,'500')\",%(Col1),+0,220,20,\"Time to wait if speech is ambigious (multiple matches) before recognising the phrase (ms)\""

    Set dvarcancel = "Cancel,Button,\"Cancel\",150,%eval('%(height)-40'),80,20,\"Press for Cancel\""
    Set dvarok = "OK,Button,\"OK\",+100,+0,80,20,\"Press for OK\""

    Dialog D1, "Free Voice Control Configuration", "450,%(height)", dvar

    While D1 $!= Cancel And D1 $!= Escape
        If D1 $== OK
            Let good = 1

            DialogControl D1,Get TBCONF
            Set res = %eval(DialogResult,Try)
            If res $== NAN
                MessageBox "Number is not an integer","Confidence Level"
                Let good = 0
            Else 
                PersistentGlobal FVCConfidence = %(res)
                Perform VoiceRecognitionConfidenceLevel %eval('%(FVCConfidence)/100.0')

            Let updatetimeouts = 0

            DialogControl D1,Get TBET
            Set res = %eval(DialogResult,Try)
            If res $== NAN Or res < 0 Or res > 9999
                MessageBox "Number is not an integer or not in range","End Timeout"
                Let good = 0
            Else If res != %(FVCEndTimeout)
                PersistentGlobal FVCEndTimeout = %(res)
                Set updatetimeouts = 1

            DialogControl D1,Get TBETA
            Set res = %eval(DialogResult,Try)
            If res $== NAN Or res < 0 Or res > 9999
                MessageBox "Number is not an integer or not in range","Ambiguous End Timeout"
                Let good = 0
            Else If res != %(FVCEndTimeoutAmbiguous)
                PersistentGlobal FVCEndTimeoutAmbiguous = %(res)
                Set updatetimeouts = 1

            If good IsTrue
                DialogControl D1,Get TBPROC
                PersistentGlobal FVCTarget = %(DialogResult)
                Static KeyProcessTo = %(FVCTarget)              // programs using Key in here pick up global KeyProcessTo, set it to the perisistent for ours

                DialogControl D1,Get CBERR
                PersistentGlobal FVCSilentError = %(DialogResult)

                PersistentGlobal FVCControls = ""
                Call SetSO(ctrl="CBWEL",flag="%(TagWelcome)")
                Call SetSO(ctrl="CBANN",flag="%(TagAnnounciate)")
                Call SetSO(ctrl="CBFAIL",flag="%(TagShowFailed)")
                Call SetSO(ctrl="CBSPK",flag="%(TagDisableSpeech)")

                If FVCControls Contains %(TagDisableSpeech)     // global speech disable
                    Static SpeechDisable = 1
                Else 
                    Static SpeechDisable = 0

                If updatetimeouts IsTrue
                    Perform VoiceRecognitionParameters 0,0,%(FVCEndTimeout),%(FVCEndTimeoutAmbiguous)

                Call SetKeyVariables
                Break 

        DialogControl D1,Continue

    DialogControl D1, Close

END PROGRAM

//*************************************************************
// SetSO
//*************************************************************
PROGRAM SetSO

DialogControl D1,Get %(ctrl)
If DialogResult IsTrue
    PersistentGlobal FVCControls += %(flag)

END PROGRAM

//*************************************************************
// GenericReply
//*************************************************************
PROGRAM GenericReply

// System Panel, Target Panel, Role Panel, Quick Comms, Communication Panel, Close Panel, Head Look, Camera, Orbit Lines, Take Photo

Say "Voice Input %(VoiceInput) recognised"

END PROGRAM

//*************************************************************
// VoiceInput_Failed
// Events: onVoiceInputFailed
//*************************************************************
PROGRAM VoiceInput_Failed

If FVCControls Contains %(TagShowFailed)
    Print Failed voice recognition with %(VoiceInput) at %(VoiceConfidence)%

END PROGRAM

//*************************************************************
// VoiceInput_Landing_GearToggle
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Toggle] Landing Gear")
//*************************************************************
PROGRAM VoiceInput_Landing_GearToggle

Rem Autogenerated V1
Key {LandingGearToggle}
Say "Acknowledged Commander;Toggling landing gear"

END PROGRAM

//*************************************************************
// VoiceInput_Landing_GearUp
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Landing] Gear Up")
//*************************************************************
PROGRAM VoiceInput_Landing_GearUp

Rem Autogenerated V1
Key {LandingGearToggle}
Say "Acknowledged Commander;Landing Gear Up;Retracting landing gear"

END PROGRAM

//*************************************************************
// VoiceInput_Landing_GearDown
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Landing] Gear Down")
//*************************************************************
PROGRAM VoiceInput_Landing_GearDown

Rem Autogenerated V1
Key {LandingGearToggle}
Say "Acknowledged Commander;Landing Gear Down;Deploying landing gear"

END PROGRAM

//*************************************************************
// VoiceInput_Chaff
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Launch|Fire Chaff")
//*************************************************************
PROGRAM VoiceInput_Chaff

Rem Autogenerated V1
Key {FireChaffLauncher}
Say "Firing chaff;Chaffing;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Shield_Cell
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Fire]|Charge|Deploy Shield Cell;Recharge Shields")
//*************************************************************
PROGRAM VoiceInput_Shield_Cell

Rem Autogenerated V1
Key {UseShieldCell}
Say "Shield Cell;Firing Cell;Regarding Cells;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Lights_On
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Ship] Lights On")
//*************************************************************
PROGRAM VoiceInput_Lights_On

Rem Autogenerated V1
Key {ShipSpotLightToggle}
Say "Lights on;Ship Lights on Commander;Aye Aye Commander;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Lights_Off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Ship] Lights Off")
//*************************************************************
PROGRAM VoiceInput_Lights_Off

Rem Autogenerated V1
Key {ShipSpotLightToggle}
Say "Lights off;Ship Lights off Commander;Aye Aye Commander;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Lights_Toggle
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Lights Toggle;Toggle ship lights")
//*************************************************************
PROGRAM VoiceInput_Lights_Toggle

Rem Autogenerated V1
Key {ShipSpotLightToggle}
Say "Toggling lights;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Heat_Sink
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Deploy|Fire|Launch|[] Heat Sink")
//*************************************************************
PROGRAM VoiceInput_Heat_Sink

Rem Autogenerated V1
Key {DeployHeatSink}
Say "Heat sink away;Deploying heat sink;Launching heat sink;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Deploy_Cargo_Scoop
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Deploy|Lower [Cargo] Scoop")
//*************************************************************
PROGRAM VoiceInput_Deploy_Cargo_Scoop

Rem Autogenerated V1
Key {ToggleCargoScoop}
Say "Scoop Out;Cargo scoop deployed;Scoop deploying;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Retract_Cargo_Scoop
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Retract|Raise|Retract [Cargo] Scoop")
//*************************************************************
PROGRAM VoiceInput_Retract_Cargo_Scoop

Rem Autogenerated V1
Key {ToggleCargoScoop}
Say "Scoop retracting;Cargo scoop retracting;Scoop up;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Microphone_Mute
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Microphone Mute;Mute Microphone")
//*************************************************************
PROGRAM VoiceInput_Microphone_Mute

Rem Autogenerated V1
Key {MicrophoneMute}
Say "Toggle microphone mute;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Charge_ECM
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Charge|Deploy|Fire ECM")
//*************************************************************
PROGRAM VoiceInput_Charge_ECM

Rem Autogenerated V1
Key {ChargeECM}
Say "Charging ECM;ECM on;ECM active;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Weapons_Colour
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Weapons Colour|Color")
//*************************************************************
PROGRAM VoiceInput_Toggle_Weapons_Colour

Rem Autogenerated V1
Key {WeaponColourToggle}
Say "Toggling weapons colour;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Engine_Colour
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Engine Colour|Color")
//*************************************************************
PROGRAM VoiceInput_Toggle_Engine_Colour

Rem Autogenerated V1
Key {EngineColourToggle}
Say "Toggling engine colour;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Flight_Assist
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Assist Toggle")
//*************************************************************
PROGRAM VoiceInput_Toggle_Flight_Assist

Rem Autogenerated V1
Key {ToggleFlightAssist}
Say "Toggling flight assist;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Flight_Assist_On
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Flight] Assist On;FlightAssist On")
//*************************************************************
PROGRAM VoiceInput_Flight_Assist_On

Rem Autogenerated V1
Key {ToggleFlightAssist}
Say "Assist on;Flight Assist on;Flight Assist;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Flight_Assist_Off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Flight] Assist Off;FlightAssist Off")
//*************************************************************
PROGRAM VoiceInput_Flight_Assist_Off

Rem Autogenerated V1
Key {ToggleFlightAssist}
Say "Assist off;Flight Assist off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Boost
// Events: onVoiceInput?(VoiceInput MatchSemicolonList Boost)
//*************************************************************
PROGRAM VoiceInput_Boost

Rem Autogenerated V1
Key {UseBoostJuice}
Say "Boosting"

END PROGRAM

//*************************************************************
// VoiceInput_Hyperspace
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Hyperspace;Jump;Warp Drive")
//*************************************************************
PROGRAM VoiceInput_Hyperspace

Rem Autogenerated V1
Key {HyperSuperCombination}
Say "Preparing to warp;Preparing to jump;Aye Aye Commander;Hold on tight, charging"

END PROGRAM

//*************************************************************
// VoiceInput_Drop
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Drop;Normal Space")
//*************************************************************
PROGRAM VoiceInput_Drop

Rem Autogenerated V1
Key {Supercruise}
Say "Dropping to normal space;Preparing to drop;Acknowledge;Acknowledge commander"

END PROGRAM

//*************************************************************
// VoiceInput_Supercruise
// Events: onVoiceInput?(VoiceInput MatchSemicolonList Supercruise)
//*************************************************************
PROGRAM VoiceInput_Supercruise

Rem Autogenerated V1
Key {Supercruise}
Say "Preparing for supercruise;Drive charging;Supercruise charging"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Orbit_Lines
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Toggle] Orbit Lines;Orbit Lines on|off")
//*************************************************************
PROGRAM VoiceInput_Toggle_Orbit_Lines

Rem Autogenerated V1
Key {OrbitLinesToggle}
Say "Orbit lines toggling;Toggle orbit lines;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Select_Target
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Select Target;Target Select;Target")
//*************************************************************
PROGRAM VoiceInput_Select_Target

Rem Autogenerated V1
Key {SelectTarget}
Say "Selecting target;Targetting"

END PROGRAM

//*************************************************************
// VoiceInput_Minus100
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Thull|Full Astern;Full Reverse;Reverse Thrust")
//*************************************************************
PROGRAM VoiceInput_Minus100

Rem Autogenerated V1
Key {SetSpeedMinus100}
Say "Acknowledge Thull|Full Reverse Commander;Thull|Full Reverse;Reverse thrust;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Minus75
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Seventy Five [Percent] Astern;Three Quarters Astern")
//*************************************************************
PROGRAM VoiceInput_Minus75

Rem Autogenerated V1
Key {SetSpeedMinus75}
Say "Aye Aye, Three Quarters Astern;75 percent astern;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Minus50
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fifty [Percent] Astern;Half Astern;Half Reverse")
//*************************************************************
PROGRAM VoiceInput_Minus50

Rem Autogenerated V1
Key {SetSpeedMinus50}
Say "One Half Astern;50 percent thrust astern;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Minus25
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Twenty Five [Percent] Astern;Quarter Reverse")
//*************************************************************
PROGRAM VoiceInput_Minus25

Rem Autogenerated V1
Key {SetSpeedMinus25}
Say "One Quarter Astern;25 percent thrust astern;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Stop
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Thull|Full Stop;Dead Stop;Halt|Stop Ship")
//*************************************************************
PROGRAM VoiceInput_Stop

Rem Autogenerated V1
Key {SetSpeedZero}
Say "Full Stop;Acknowledge;Thrust off;Engines Off Sir;Stopping ship"

END PROGRAM

//*************************************************************
// VoiceInput_25
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Twenty Five [Percent] Ahead;Quarter Power;One Quarter Power;Twenty Five;One Quarter")
//*************************************************************
PROGRAM VoiceInput_25

Rem Autogenerated V1
Key {SetSpeed25}
Say "One Quarter Ahead;25 percent thrust set;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_50
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fifty [Percent] Ahead;Half Power;Fifty")
//*************************************************************
PROGRAM VoiceInput_50

Rem Autogenerated V1
Key {SetSpeed50}
Say "One half Ahead;50 percent thrust set;Acknowledge;One half forward"

END PROGRAM

//*************************************************************
// VoiceInput_75
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Seventy Five [Percent] Ahead;Three Quarters Power;Seventy Five;Three Quarters;Cruise Speed")
//*************************************************************
PROGRAM VoiceInput_75

Rem Autogenerated V1
Key {SetSpeed75}
Say "Three Quarters Ahead;75 percent thrust set;Acknowledge;75 percent forward"

END PROGRAM

//*************************************************************
// VoiceInput_100
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Thull|Full Ahead;Thull|Full Forward;Maximum Speed; Thull|Full Thrust;Maximum Thrust")
//*************************************************************
PROGRAM VoiceInput_100

Rem Autogenerated V1
Key {SetSpeed100}
Say "Full Thrust;Acknowledge;Engines to Maximum;Maximum Thrust Commander"

END PROGRAM

//*************************************************************
// VoiceInput_NightVision
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Night Vision;Vision On;Vision Off;")
//*************************************************************
PROGRAM VoiceInput_NightVision

Rem Autogenerated V1
Key {NightVisionToggle}
Say "Night Vision Toggled"

END PROGRAM

//*************************************************************
// VoiceInput_Rotational_Correction_Toggle
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Rotational Correction Toggle|On|Off")
//*************************************************************
PROGRAM VoiceInput_Rotational_Correction_Toggle

Rem Autogenerated V1
Key {DisableRotationCorrectToggle}
Say "Rotational correction toggled"

END PROGRAM

//*************************************************************
// VoiceInput_Next_Target
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Select] Next Target")
//*************************************************************
PROGRAM VoiceInput_Next_Target

Rem Autogenerated V1
Key {CycleNextTarget}
Say "Next target;Selecting next;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Previous_target
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Select] Previous Target")
//*************************************************************
PROGRAM VoiceInput_Previous_target

Rem Autogenerated V1
Key {CyclePreviousTarget}
Say "Previous target;Selecting previous;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Highest_Threat
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Highest Threat|Hostile")
//*************************************************************
PROGRAM VoiceInput_Highest_Threat

Rem Autogenerated V1
Key {SelectHighestThreat}
Say "Highest hostile;Most hostile;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Next_Hostile
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Select] Next Hostile")
//*************************************************************
PROGRAM VoiceInput_Next_Hostile

Rem Autogenerated V1
Key {CycleNextHostileTarget}
Say "Next hostile;Selecting next hostile;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Previous_Hostile
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Select] Previous Hostile")
//*************************************************************
PROGRAM VoiceInput_Previous_Hostile

Rem Autogenerated V1
Key {CyclePreviousHostileTarget}
Say "Previous hostile;Selecting previous hostile;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Target_Wing_man_1
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Target Wing man one;Primary Wing man")
//*************************************************************
PROGRAM VoiceInput_Target_Wing_man_1

Rem Autogenerated V1
Key {TargetWingman0}
Say "Target wing man 1;Acknowledge;Wing man 1 selected"

END PROGRAM

//*************************************************************
// VoiceInput_Target_Wing_man_2
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Target Wing man two;Secondary Wing man")
//*************************************************************
PROGRAM VoiceInput_Target_Wing_man_2

Rem Autogenerated V1
Key {TargetWingman1}
Say "Target wing man 2;Acknowledge;Wing man 2 selected"

END PROGRAM

//*************************************************************
// VoiceInput_Target_Wing_man_3
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Target Wing man three;Tertiary Wing man")
//*************************************************************
PROGRAM VoiceInput_Target_Wing_man_3

Rem Autogenerated V1
Key {TargetWingman2}
Say "Target wing man 3;Acknowledge;Wing man 3 selected"

END PROGRAM

//*************************************************************
// VoiceInput_Select_Wing_man_target
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Select Wing man target;Wing man target")
//*************************************************************
PROGRAM VoiceInput_Select_Wing_man_target

Rem Autogenerated V1
Key {SelectTargetsTarget}
Say "Select wing man target;Targetting wing man target"

END PROGRAM

//*************************************************************
// VoiceInput_Wingman_Nav_Lock
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Wingman] Nav Lock")
//*************************************************************
PROGRAM VoiceInput_Wingman_Nav_Lock

Rem Autogenerated V1
Key {WingNavLock}
Say "Toggling Wing man Navigational lock"

END PROGRAM

//*************************************************************
// VoiceInput_Next_Subsystem
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Select] Next Subsystem")
//*************************************************************
PROGRAM VoiceInput_Next_Subsystem

Rem Autogenerated V1
Key {CycleNextSubsystem}
Say "Next subsystem;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Previous_Subsystem
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Select] previous subsystem")
//*************************************************************
PROGRAM VoiceInput_Previous_Subsystem

Rem Autogenerated V1
Key {CyclePreviousSubsystem}
Say "Previous subsystem:Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Resume_Route
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Resume|Replot Route")
//*************************************************************
PROGRAM VoiceInput_Resume_Route

Rem Autogenerated V1
Key {TargetNextRouteSystem}
Say "Resuming planned route;Route set Commander"

END PROGRAM

//*************************************************************
// VoiceInput_Next_Fire_Group
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Next] Fire Group;Next Group")
//*************************************************************
PROGRAM VoiceInput_Next_Fire_Group

Rem Autogenerated V1
Key {CycleFireGroupNext}
Say "Next group;Selected;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Previous_Fire_Group
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Previous Fire Group;Previous Group")
//*************************************************************
PROGRAM VoiceInput_Previous_Fire_Group

Rem Autogenerated V1
Key {CycleFireGroupPrevious}
Say "Previous group;Selected;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Deploy_Weapons
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Deploy Weapons|Hardpoints;Deploy")
//*************************************************************
PROGRAM VoiceInput_Deploy_Weapons

Rem Autogenerated V1
Key {DeployHardpointToggle}
Say "Deploying weapons;Weapons out"

END PROGRAM

//*************************************************************
// VoiceInput_Retract_Weapons
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Retract Weapons|Hardpoints;Retract;Weapons Away")
//*************************************************************
PROGRAM VoiceInput_Retract_Weapons

Rem Autogenerated V1
Key {DeployHardpointToggle}
Say "Retracting weapons;Weapons away"

END PROGRAM

//*************************************************************
// VoiceInput_Silent_Running
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Silent Running On|Off")
//*************************************************************
PROGRAM VoiceInput_Silent_Running

Rem Autogenerated V1
Key {ToggleButtonUpInput}
Say "Toggling silent running;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Increase_Radar_Range
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Increase Radar|Sensor [Range]")
//*************************************************************
PROGRAM VoiceInput_Increase_Radar_Range

Rem Autogenerated V1
Key {RadarIncreaseRange}
Say "Increase Range;Sensor range increased"

END PROGRAM

//*************************************************************
// VoiceInput_Decrease_Radar_Range
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Decrease Radar|Sensor [Range]")
//*************************************************************
PROGRAM VoiceInput_Decrease_Radar_Range

Rem Autogenerated V1
Key {RadarDecreaseRange}
Say "Decrease Range;Sensor range decreased"

END PROGRAM

//*************************************************************
// VoiceInput_Long_Range_Scan
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Scanner] Long|Maximum Range")
//*************************************************************
PROGRAM VoiceInput_Long_Range_Scan

Rem Autogenerated V1
Key "{RadarIncreaseRange} {RadarIncreaseRange} {RadarIncreaseRange} {RadarIncreaseRange} {RadarIncreaseRange}"
Say "Long Range;Sensor to long range"

END PROGRAM

//*************************************************************
// VoiceInput_Short_Range_Scan
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Scanner] Short|Maximum Range")
//*************************************************************
PROGRAM VoiceInput_Short_Range_Scan

Rem Autogenerated V1
Key "{RadarDecreaseRange} {RadarDecreaseRange} {RadarDecreaseRange} {RadarDecreaseRange}"
Say "Short Range;Sensor to short range"

END PROGRAM

//*************************************************************
// VoiceInput_Medium_Range_Scan
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Scanner] Medium|Maximum Range")
//*************************************************************
PROGRAM VoiceInput_Medium_Range_Scan

Rem Autogenerated V1
Key "{RadarIncreaseRange} {RadarIncreaseRange} {RadarIncreaseRange} {RadarIncreaseRange} {RadarIncreaseRange} {RadarDecreaseRange}"
Say "Medium Range;Sensor to medium range"

END PROGRAM

//*************************************************************
// VoiceInput_Reset_Head_Position
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Reset Head Position")
//*************************************************************
PROGRAM VoiceInput_Reset_Head_Position

Rem Autogenerated V1
Key {HMDReset}
Say "Head display reset;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Target_Panel
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Target Panel")
//*************************************************************
PROGRAM VoiceInput_Target_Panel

Rem Autogenerated V1
Key {FocusLeftPanel}
Say "Target Panel;Acknowledge;Selecting panel;Opening"

END PROGRAM

//*************************************************************
// VoiceInput_Systems_Panel
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Systems Panel")
//*************************************************************
PROGRAM VoiceInput_Systems_Panel

Rem Autogenerated V1
Key {FocusRightPanel}
Say "Systems Panel;Acknowledge;Selecting panel;Opening"

END PROGRAM

//*************************************************************
// VoiceInput_Role_Panel
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Role Panel")
//*************************************************************
PROGRAM VoiceInput_Role_Panel

Rem Autogenerated V1
Key {FocusRadarPanel}
Say "Role Panel;Acknowledge;Selecting panel;Opening"

END PROGRAM

//*************************************************************
// VoiceInput_Communication_Panel
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Communication Panel;[Open] Comms Panel")
//*************************************************************
PROGRAM VoiceInput_Communication_Panel

Rem Autogenerated V1
Key {FocusCommsPanel}
Say "Comms Panel;Acknowledge;Selecting panel;Opening"

END PROGRAM

//*************************************************************
// VoiceInput_Close_Panel
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Close Panel;Focus;Front View")
//*************************************************************
PROGRAM VoiceInput_Close_Panel

Rem Autogenerated V1
Key {UIFocus}
Say "Closing Panel;Closing"

END PROGRAM

//*************************************************************
// VoiceInput_Quick_Comms
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Quick Comms")
//*************************************************************
PROGRAM VoiceInput_Quick_Comms

Rem Autogenerated V1
Key {QuickCommsPanel}
Say "Quick Comms Panel;Acknowledge;Selecting panel;Opening"

END PROGRAM

//*************************************************************
// VoiceInput_Open_Galaxy_Map
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Galaxy Map")
//*************************************************************
PROGRAM VoiceInput_Open_Galaxy_Map

Rem Autogenerated V1
Key {GalaxyMapOpen}
Say "Opening map;Galaxy map opening;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Close_Galaxy_Map
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Close Galaxy Map")
//*************************************************************
PROGRAM VoiceInput_Close_Galaxy_Map

Rem Autogenerated V1
Key {GalaxyMapOpen}
Say "Closing map;Galaxy map Closing;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Open_System_Map
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] System Map")
//*************************************************************
PROGRAM VoiceInput_Open_System_Map

Rem Autogenerated V1
Key {SystemMapOpen}
Say "Opening map;System map opening;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Close_System_Map
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Close System Map")
//*************************************************************
PROGRAM VoiceInput_Close_System_Map

Rem Autogenerated V1
Key {SystemMapOpen}
Say "Closing map;System map Closing;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Head Look On|Off")
//*************************************************************
PROGRAM VoiceInput_Head_Look

Rem Autogenerated V1
Key {HeadLookToggle}
Say "Toggling head look mode"

END PROGRAM

//*************************************************************
// VoiceInput_Game_Menu
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Game Menu")
//*************************************************************
PROGRAM VoiceInput_Game_Menu

Rem Autogenerated V1
Key {Pause}
Say "Game menu"

END PROGRAM

//*************************************************************
// VoiceInput_Friends_Menu
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Open] Friends Menu")
//*************************************************************
PROGRAM VoiceInput_Friends_Menu

Rem Autogenerated V1
Key {FriendsMenu}
Say "Friend menu selected;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Next_Panel
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Next Panel")
//*************************************************************
PROGRAM VoiceInput_Next_Panel

Rem Autogenerated V1
Key {CycleNextPanel}
Say "Next panel;Select next panel;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Previous_Panel
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Previous Panel")
//*************************************************************
PROGRAM VoiceInput_Previous_Panel

Rem Autogenerated V1
Key {CyclePreviousPanel}
Say "Previous panel;Select previous panel;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_Reset
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Head Look Reset;Look Forward")
//*************************************************************
PROGRAM VoiceInput_Head_Look_Reset

Rem Autogenerated V1
Key {HeadLookReset}
Say "View forward;Reset view;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_Up
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "View Up")
//*************************************************************
PROGRAM VoiceInput_Head_Look_Up

Rem Autogenerated V1
Key {HeadLookPitchUp}
Say "View up;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_Down
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "View Down")
//*************************************************************
PROGRAM VoiceInput_Head_Look_Down

Rem Autogenerated V1
Key {HeadLookPitchDown}
Say "View down;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_Left
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "View Left")
//*************************************************************
PROGRAM VoiceInput_Head_Look_Left

Rem Autogenerated V1
Key {HeadLookYawLeft}
Say "View left;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_Right
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "View Right")
//*************************************************************
PROGRAM VoiceInput_Head_Look_Right

Rem Autogenerated V1
Key {HeadLookYawRight}
Say "View right;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_FullLeft
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Look Left")
//*************************************************************
PROGRAM VoiceInput_Head_Look_FullLeft

Rem Autogenerated V1
Key "{HeadLookYawLeft} {HeadLookYawLeft} {HeadLookYawLeft}"
Say "Left View;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_FullRight
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Look Right")
//*************************************************************
PROGRAM VoiceInput_Head_Look_FullRight

Rem Autogenerated V1
Key "{HeadLookYawRight} {HeadLookYawRight} {HeadLookYawRight}"
Say "Right View;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Head_Look_FullUp
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Look Up")
//*************************************************************
PROGRAM VoiceInput_Head_Look_FullUp

Rem Autogenerated V1
Key "{HeadLookPitchUp} {HeadLookPitchUp} {HeadLookPitchUp} {HeadLookPitchUp}"
Say "Look up;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Recall_Ship
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Recall Ship")
//*************************************************************
PROGRAM VoiceInput_Recall_Ship

Rem Autogenerated V1
Key {RecallDismissShip}
Say "Recall ship;Hailing ship to return;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Dismiss_Ship
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Dismiss Ship")
//*************************************************************
PROGRAM VoiceInput_Dismiss_Ship

Rem Autogenerated V1
Key {RecallDismissShip}
Say "Dismissing ship;Bon voyage;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Drive_Assist
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Drive Assist")
//*************************************************************
PROGRAM VoiceInput_Toggle_Drive_Assist

Rem Autogenerated V1
Key {ToggleDriveAssist}
Say "Toggle drive assist;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Drive_Assist_On
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Drive Assist On")
//*************************************************************
PROGRAM VoiceInput_Drive_Assist_On

Rem Autogenerated V1
Key {ToggleDriveAssist}
Say "Drive assist on;Assist On;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Drive_Assist_Off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Drive Assist Off")
//*************************************************************
PROGRAM VoiceInput_Drive_Assist_Off

Rem Autogenerated V1
Key {ToggleDriveAssist}
Say "Drive assist off;Assist Off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_Dock
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fighter Dock")
//*************************************************************
PROGRAM VoiceInput_Fighter_Dock

Rem Autogenerated V1
Key {OrderRequestDock}
Say "Fighter, redock;Fighter to redock;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_Defensive
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fighter Defensive")
//*************************************************************
PROGRAM VoiceInput_Fighter_Defensive

Rem Autogenerated V1
Key {OrderDefensiveBehaviour}
Say "Fighter, defensive;Fighter to defensive mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_Aggressive
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fighter Agressive")
//*************************************************************
PROGRAM VoiceInput_Fighter_Aggressive

Rem Autogenerated V1
Key {OrderAggressiveBehaviour}
Say "Fighter, aggressive;Fighter to aggressive mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_Target
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fighter Target;Focus on Target")
//*************************************************************
PROGRAM VoiceInput_Fighter_Target

Rem Autogenerated V1
Key {OrderFocusTarget}
Say "Fighter, attack target;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_HoldFire
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Fighter] hold fire")
//*************************************************************
PROGRAM VoiceInput_Fighter_HoldFire

Rem Autogenerated V1
Key {OrderHoldFire}
Say "Fighter, hold fire;Fighter to hold fire;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_HoldPosition
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Fighter] hold position")
//*************************************************************
PROGRAM VoiceInput_Fighter_HoldPosition

Rem Autogenerated V1
Key {OrderHoldPosition}
Say "Fighter, hold position;Fighter to hold position;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_Follow
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fighter Follow;Follow me")
//*************************************************************
PROGRAM VoiceInput_Fighter_Follow

Rem Autogenerated V1
Key {OrderFollow}
Say "Fighter, follow me;Fighter to follow;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Fighter_Open
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Fighter] Open orders")
//*************************************************************
PROGRAM VoiceInput_Fighter_Open

Rem Autogenerated V1
Key {OpenOrders}
Say "Fighter, open orders;Fighter free patrol;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Ship_Defensive
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Ship Defensive")
//*************************************************************
PROGRAM VoiceInput_Ship_Defensive

Rem Autogenerated V1
Key {OrderDefensiveBehaviour}
Say "Ship, defensive;ship to defensive mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Ship_Aggressive
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Ship Agressive")
//*************************************************************
PROGRAM VoiceInput_Ship_Aggressive

Rem Autogenerated V1
Key {OrderAggressiveBehaviour}
Say "Ship, aggressive;ship to aggressive mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Ship_Target
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Ship Focus on Target")
//*************************************************************
PROGRAM VoiceInput_Ship_Target

Rem Autogenerated V1
Key {OrderFocusTarget}
Say "Ship, attack target;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Ship_HoldFire
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Ship hold fire")
//*************************************************************
PROGRAM VoiceInput_Ship_HoldFire

Rem Autogenerated V1
Key {OrderHoldFire}
Say "Ship, hold fire;ship to hold fire;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Ship_HoldPosition
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Ship hold position")
//*************************************************************
PROGRAM VoiceInput_Ship_HoldPosition

Rem Autogenerated V1
Key {OrderHoldPosition}
Say "Ship, hold position;ship to hold position;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Ship_Follow
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Ship Follow;Ship Follow me")
//*************************************************************
PROGRAM VoiceInput_Ship_Follow

Rem Autogenerated V1
Key {OrderFollow}
Say "Ship, follow me;ship to follow;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Ship_Open
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Ship Open orders")
//*************************************************************
PROGRAM VoiceInput_Ship_Open

Rem Autogenerated V1
Key {OpenOrders}
Say "Ship, open orders;ship free patrol;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Increase_Engine_Power
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Increase|More Engine Power;More Engines;Engines Up;Increase Engines")
//*************************************************************
PROGRAM VoiceInput_Increase_Engine_Power

Rem Autogenerated V1
Key {IncreaseEnginesPower}
Say "Power to engine;More engine power;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Increase_Weapons_Power
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Increase|More Engine Weapons;More Weapons;Weapons Up;Increase Weapons")
//*************************************************************
PROGRAM VoiceInput_Increase_Weapons_Power

Rem Autogenerated V1
Key {IncreaseWeaponsPower}
Say "Power to weapons;More weapons power;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Increase_Systems_Power
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Increase|More Shield Power;More Shields;Shields Up;Increase Shields;More|Increase Systems Power")
//*************************************************************
PROGRAM VoiceInput_Increase_Systems_Power

Rem Autogenerated V1
Key {IncreaseSystemsPower}
Say "Power to systems;More system power;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Reset_Power
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Reset Power")
//*************************************************************
PROGRAM VoiceInput_Reset_Power

Rem Autogenerated V1
Key {ResetPowerDistribution}
Say "Power reset;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_WS
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Weapons and Shields;Shields and Weapons")
//*************************************************************
PROGRAM VoiceInput_Weapons_WS

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseWeaponsPower} {IncreaseWeaponsPower} {IncreaseSystemsPower} {IncreaseWeaponsPower}"
Say "Power balanced to shields and weapons;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_SpeedAttack
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Speed Attack")
//*************************************************************
PROGRAM VoiceInput_Weapons_SpeedAttack

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseWeaponsPower} {IncreaseWeaponsPower} {IncreaseEnginesPower}"
Say "Speed attack set;Power set to speed attack;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_MaxWeapons
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Maximum Weapons;Weapons;Weapons Maximum")
//*************************************************************
PROGRAM VoiceInput_Weapons_MaxWeapons

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseWeaponsPower} {IncreaseWeaponsPower} {IncreaseEnginesPower} {IncreaseWeaponsPower}"
Say "Power diverted to weapons;Power to weapons;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_MaxShields
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Maximum Shields;Shields;Shields Maximum")
//*************************************************************
PROGRAM VoiceInput_Weapons_MaxShields

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseSystemsPower} {IncreaseSystemsPower} {IncreaseEnginesPower} {IncreaseSystemsPower}"
Say "Power diverted to shields;Power to shields;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_MaxEngines
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Maximum Engines;Engines;Engines Maximum")
//*************************************************************
PROGRAM VoiceInput_Weapons_MaxEngines

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseEnginesPower} {IncreaseEnginesPower} {IncreaseSystemsPower} {IncreaseEnginesPower}"
Say "Power diverted to engines;Power to engines;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_Balanced
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Balanced Attack")
//*************************************************************
PROGRAM VoiceInput_Weapons_Balanced

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseWeaponsPower} {IncreaseWeaponsPower} {IncreaseEnginesPower}"
Say "Balanced power selected;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_AttackMode
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Attack Mode;Attack Power;Power Attack")
//*************************************************************
PROGRAM VoiceInput_Weapons_AttackMode

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseEnginesPower} {IncreaseEnginesPower} {IncreaseWeaponsPower} {IncreaseEnginesPower}"
Say "Power attack set;Power set to attack mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Weapons_FastAttack
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Fast Attack")
//*************************************************************
PROGRAM VoiceInput_Weapons_FastAttack

Rem Autogenerated V1
Key "{ResetPowerDistribution} {IncreaseWeaponsPower} {IncreaseEnginesPower}"
Say "Fast attack set;Power set to fast mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Escape
// Events: onVoiceInput?(VoiceInput MatchSemicolonList Escape;Emergency)
//*************************************************************
PROGRAM VoiceInput_Escape

Rem Autogenerated V1
Key "{SetSpeed100} {UseBoostJuice} {ResetPowerDistribution} {IncreaseEnginesPower} {IncreaseEnginesPower} {IncreaseSystemsPower} {IncreaseEnginesPower} {SetSpeed100}"
Say "Oh Bleep;Escaping;Max power to engines;Emergency Escape Set"

END PROGRAM

//*************************************************************
// VoiceInput_Screenshot
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Take Photo;[Take] Screen shot")
//*************************************************************
PROGRAM VoiceInput_Screenshot

Rem Autogenerated V1
Key "F10"
Say "Snap;Photo taken;Screen shot taken;Acknowledge;Say Cheese"

END PROGRAM

//*************************************************************
// VoiceInput_Camera
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Camera [Mode];Camera On|Off|Mode")
//*************************************************************
PROGRAM VoiceInput_Camera

Rem Autogenerated V1
Key "{PhotoCameraToggle}"
Say "Toggling Camera Mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Free
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Toggle]|Enter Free [Camera] Mode")
//*************************************************************
PROGRAM VoiceInput_Camera_Free

Rem Autogenerated V1
Key "{ToggleFreeCam}"
Say "Free Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_PreviousCam
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Previous Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_PreviousCam

Rem Autogenerated V1
Key "{VanityCameraScrollLeft}"
Say "Selecting Previous Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_NextCam
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Next Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_NextCam

Rem Autogenerated V1
Key "{VanityCameraScrollRight}"
Say "Selecting Next Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_One
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera One;Front Cockpit Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_One

Rem Autogenerated V1
Key "{VanityCameraOne}"
Say "Selecting Front Cockpit Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Two
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Two;Rear Cockpit Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Two

Rem Autogenerated V1
Key "{VanityCameraTwo}"
Say "Selecting Rear Cockpit Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Three
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Three;Pilot Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Three

Rem Autogenerated V1
Key "{VanityCameraThree}"
Say "Selecting Pilot Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Four
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Four;Secondary Pilot Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Four

Rem Autogenerated V1
Key "{VanityCameraFour}"
Say "Selecting Pilot secondary Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Five
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Five;[Co] Pilot One Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Five

Rem Autogenerated V1
Key "{VanityCameraFive}"
Say "Selecting Co Pilot one Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Six
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Six;[Co] Pilot Two Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Six

Rem Autogenerated V1
Key "{VanityCameraSix}"
Say "Selecting Co Pilot two Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Seven
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Seven;Front Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Seven

Rem Autogenerated V1
Key "{VanityCameraSeven}"
Say "Selecting Front Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Eight
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Eight;Rear Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Eight

Rem Autogenerated V1
Key "{VanityCameraEight}"
Say "Selecting Rear Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Nine
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Camera Nine;Low [Rear] Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_Nine

Rem Autogenerated V1
Key "{VanityCameraNine}"
Say "Selecting Low Rear Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Hud
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle HUD;Toggle Head Up Display")
//*************************************************************
PROGRAM VoiceInput_Camera_Hud

Rem Autogenerated V1
Key "{FreeCamToggleHUD}"
Say "Toggling Display;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_IncrSpeed
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Increase Camera Speed")
//*************************************************************
PROGRAM VoiceInput_Camera_IncrSpeed

Rem Autogenerated V1
Key "{FreeCamSpeedInc}"
Say "Increasing free camera speed;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_DecrSpeed
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Decrease Camera Speed")
//*************************************************************
PROGRAM VoiceInput_Camera_DecrSpeed

Rem Autogenerated V1
Key "{FreeCamSpeedDec}"
Say "Decreasing free camera speed;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Stabiliser
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Camera Stabiliser|Stabilizer")
//*************************************************************
PROGRAM VoiceInput_Camera_Stabiliser

Rem Autogenerated V1
Key "{ToggleRotationLock}"
Say "Toggling camera stabiliser;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_ShipControls
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Camera Ship Controls")
//*************************************************************
PROGRAM VoiceInput_Camera_ShipControls

Rem Autogenerated V1
Key "{FixCameraRelativeToggle}"
Say "Toggling ship camera control mode;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_Attach
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Camera [World] Attach|World")
//*************************************************************
PROGRAM VoiceInput_Camera_Attach

Rem Autogenerated V1
Key "{FixCameraWorldToggle}"
Say "Toggling Camera Attach to ship;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_ExitFree
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Exit Free Camera")
//*************************************************************
PROGRAM VoiceInput_Camera_ExitFree

Rem Autogenerated V1
Key "{QuitCamera}"
Say "Exiting Free Camera;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_IncrZoom
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Increase [Camera] Zoom; Zoom Camera In")
//*************************************************************
PROGRAM VoiceInput_Camera_IncrZoom

Rem Autogenerated V1
Key "{FreeCamZoomIn} {FreeCamZoomIn}"
Say "Zoom In;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_DecrZoom
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Decrease [Camera] Zoom;Zoom Camera Out")
//*************************************************************
PROGRAM VoiceInput_Camera_DecrZoom

Rem Autogenerated V1
Key "{FreeCamZoomOut} {FreeCamZoomOut}"
Say "Zoom Out;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_IncrBlur
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Increase [Camera] Blur")
//*************************************************************
PROGRAM VoiceInput_Camera_IncrBlur

Rem Autogenerated V1
Key "{FStopInc}"
Say "F Stop Increase;Acknowledge;Blur Increase"

END PROGRAM

//*************************************************************
// VoiceInput_Camera_DecrBlur
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Decrease [Camera] Blur")
//*************************************************************
PROGRAM VoiceInput_Camera_DecrBlur

Rem Autogenerated V1
Key "{FStopDec}"
Say "F Stop Decrease;Acknowledge;Blur Decrease"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Handbrake_Assist
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle [Hand] brake")
//*************************************************************
PROGRAM VoiceInput_Toggle_Handbrake_Assist

Rem Autogenerated V1
Key "{AutoBreakBuggyButton}"
Say "Toggle hand brake"

END PROGRAM

//*************************************************************
// VoiceInput_Handbrake_Assist_On
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Hand] brake On")
//*************************************************************
PROGRAM VoiceInput_Handbrake_Assist_On

Rem Autogenerated V1
Key "{AutoBreakBuggyButton}"
Say "Hand brake on;Brake On;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Handbrake_Assist_Off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "[Hand] brake Off")
//*************************************************************
PROGRAM VoiceInput_Handbrake_Assist_Off

Rem Autogenerated V1
Key "{AutoBreakBuggyButton}"
Say "Hand brake off;Brake Off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Headlights
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Head Lights Toggle")
//*************************************************************
PROGRAM VoiceInput_Toggle_Headlights

Rem Autogenerated V1
Key "{HeadlightsBuggyButton}"
Say "Toggle head lights"

END PROGRAM

//*************************************************************
// VoiceInput_Headlights_On
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Head Lights on")
//*************************************************************
PROGRAM VoiceInput_Headlights_On

Rem Autogenerated V1
Key "{HeadlightsBuggyButton}"
Say "Head Lights on;Lights On;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Headlights_Off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Head Lights off")
//*************************************************************
PROGRAM VoiceInput_Headlights_Off

Rem Autogenerated V1
Key "{HeadlightsBuggyButton}"
Say "Head lights off;Lights Off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Toggle_Turret
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Turret;Turret Toggle")
//*************************************************************
PROGRAM VoiceInput_Toggle_Turret

Rem Autogenerated V1
Key "{ToggleBuggyTurretButton}"
Say "Toggling turret;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Turret_On
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Enter Turret")
//*************************************************************
PROGRAM VoiceInput_Turret_On

Rem Autogenerated V1
Key "{ToggleBuggyTurretButton}"
Say "Entering Turret;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Turret_Off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Leave Turrent")
//*************************************************************
PROGRAM VoiceInput_Turret_Off

Rem Autogenerated V1
Key "{ToggleBuggyTurretButton}"
Say "Leaving Turret;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Summary_Panel_toggle
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Summary Panel")
//*************************************************************
PROGRAM VoiceInput_Summary_Panel_toggle

Popout "Spanel" toggle
Say "Toggling summary panel;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Summary_Panel_on
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Summary Panel On")
//*************************************************************
PROGRAM VoiceInput_Summary_Panel_on

Popout "Spanel" on
Say "Summary panel on;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Summary_Panel_off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Summary Panel Off")
//*************************************************************
PROGRAM VoiceInput_Summary_Panel_off

Popout "Spanel" off
Say "Summary panel off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Trippanel_Panel_toggle
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Trip Panel")
//*************************************************************
PROGRAM VoiceInput_Trippanel_Panel_toggle

Popout "Tripanel" toggle
Say "Toggling Trip panel;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Trippanel_Panel_on
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Trip Panel On")
//*************************************************************
PROGRAM VoiceInput_Trippanel_Panel_on

Popout "Trippanel" on
Say "Trip panel on;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Trippanel_Panel_off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Trip Panel Off")
//*************************************************************
PROGRAM VoiceInput_Trippanel_Panel_off

Popout "Trippanel" off
Say "Trip panel off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Notepanel_Panel_toggle
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Note Panel")
//*************************************************************
PROGRAM VoiceInput_Notepanel_Panel_toggle

Popout "Notepanel" toggle
Say "Toggling Note panel;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Notepanel_Panel_on
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Note Panel On")
//*************************************************************
PROGRAM VoiceInput_Notepanel_Panel_on

Popout "Notepanel" on
Say "Note panel on;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_Notepanel_Panel_off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Note Panel Off")
//*************************************************************
PROGRAM VoiceInput_Notepanel_Panel_off

Popout "Notepanel" off
Say "Note panel off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_RouteTracker_Panel_toggle
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Toggle Route Tracker")
//*************************************************************
PROGRAM VoiceInput_RouteTracker_Panel_toggle

Popout "Routetracker" toggle
Say "Toggling Route tracker panel;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_RouteTracker_Panel_on
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Route Tracker On")
//*************************************************************
PROGRAM VoiceInput_RouteTracker_Panel_on

Popout "RouteTracker" on
Say "Route tracker on;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_RouteTracker_Panel_off
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Route Tracker Off")
//*************************************************************
PROGRAM VoiceInput_RouteTracker_Panel_off

Popout "RouteTracker" off
Say "Route tracker off;Acknowledge"

END PROGRAM

//*************************************************************
// VoiceInput_ScanSystem
// Events: onVoiceInput?(VoiceInput MatchSemicolonList "Scan System")
//*************************************************************
PROGRAM VoiceInput_ScanSystem

Set version = %version(0)
If version $== 9.0.0.0 Or version $== 9.0.1.0 Or version $== 9.0.2.0
    Print EDD >= 9.0.3.0 Required to execute this key sequence
Else 
    Print Scan System
    Key "!{SecondaryFire}"
    Say "Scanning system Commander;Acknowledge;Scanner Operating"
    Timer ScanSystemTimer,6000

END PROGRAM

//*************************************************************
// ScanSystemTimer
// Events: onTimer?(TimerName $== ScanSystemTimer)
//*************************************************************
PROGRAM ScanSystemTimer

Key "^{SecondaryFire}"

END PROGRAM

