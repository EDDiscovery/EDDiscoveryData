ACTIONFILE V4

ENABLED True

INSTALL LongDescription="Misc Test script for action"
INSTALL ShortDescription="Misc Test script"
INSTALL Version=0.1.0.0
INSTALL MinEDVersion=9.1.0.0
INSTALL Location=Actions


EVENT onKeyPress, DialogM, "", KeyPress $== Shift+F1
EVENT onKeyPress, DialogS, "", KeyPress $== Shift+F2
EVENT onKeyPress, DialogInputBox, "", KeyPress $== Shift+F3
EVENT onKeyPress, TestFunctions4, "", KeyPress $== Shift+F5
EVENT onKeyPress, TestFunctions2, "", KeyPress $== Shift+F6
EVENT onKeyPress, TestFunctions10, "", KeyPress $== Shift+F7
EVENT onTest1, onTest1, "", Condition AlwaysTrue
EVENT onStartup, onStartup, "", Condition AlwaysTrue
EVENT onSurveyorXX, Surveyor, "", Condition AlwaysTrue

PROGRAM Surveyor
print %(EventName) - %(Body) - %(BodyShortName) 
END PROGRAM

//*************************************************************
// Key
// Events: None
//*************************************************************
PROGRAM Key

Rem Pragma dumpvars *
Print %(Device):%(EventName):%(Pressed)

END PROGRAM

//*************************************************************
// onStartup
// Events: onStartup
//*************************************************************
PROGRAM onStartup

Print **** Test T1 installed
Rem Perform EnableEliteInputNoAxis
Rem Static KeyProcessTo = elitedangerous64

Static npcvolume=60
Static npcrate=0
Static npceffects=""
Static npcvoice=IVONA 2 Emma OEM

END PROGRAM

//*************************************************************
// TestFunctions1
// Events: onKeyPress?(KeyPress $== Shift+F5)
//*************************************************************
PROGRAM TestFunctions1

rem SCAN "Oochorrs KP-A c16-0" "2 A"
rem pragma dumpvars *
static latformat="M=minusy;CurCN2"
print %tostring(-10.2,latformat)
set star = "OoChorrs KP-A c16-0"
print %star(star,say_rr,NoSplitCaps)
print %star(star,say_rr,SplitCaps)
print %star(star,say_rr)
set body = "OoChorrs KP-A c16-0 A2"
set body = "OoChorrs KP-A c16-0 Aakak's Psosio"
print %body(body,star,say_rr,SplitCaps)
print %body(body,star,say_rr)
print %body(body,star,say_rr,NS)
print %body(body,star,say_rr,NoSplitCaps)

return


Rem pragma dumpvars *
Perform configurevoice Fred,%(npcvoice),%(npcvolume),%(npcrate),%(npceffects)
If %(DialogResult) IsTrue
    Static npcvolume = %(Volume)
    Static npcrate=%(Rate)
    Static npceffects=%(Effects)
    Static npcvoice=%(VoiceName)
    Print "Set %(npcvoice) %(npcvolume) %(npcrate) %(npceffects)"

END PROGRAM

//*************************************************************
// TestFunctions2
// Events: onKeyPress?(KeyPress $== Shift+F6)
//*************************************************************
PROGRAM TestFunctions2

Perform configurevoice Fred,NOVOICENAME,%(npcvolume),%(npcrate),%(npceffects)
If %(DialogResult) IsTrue
    Static npcrate=%(Rate)
    Static npceffects=%(Effects)
    Static npcvolume = %(Volume)
    Print "Set %(npcvolume) %(npcrate) %(npceffects)"

END PROGRAM

//*************************************************************
// TestFunctions3
// Events: onKeyPress?(KeyPress $== Shift+F7)
//*************************************************************
PROGRAM TestFunctions3

set speech = "Bienvenido comandante Elite <phoneme alphabet='ipa' ph = 'ˈj͡jugom'>Jugom</phoneme>, pilotando una <phoneme alphabet='ipa' ph = 'ˈvʌl.tʃɚ'>Vulture</phoneme> con 22.11 Mil Millones de créditos"
rem Say %(speech),Voice="Microsoft David"
Say %(speech),Voice="IVONA 2 Emma OEM"




END PROGRAM
//*************************************************************
// TestFunctions4
//*************************************************************
PROGRAM TestFunctions4

rem demo v30 new actionevent to make an event and trigger it

set v1=10
set v2=20

print call actionevent
perform actionevent OnTest1 T1Event v1 v2
print end actionevent

END PROGRAM
//*************************************************************
// Response to OnTest1
//*************************************************************
PROGRAM onTest1

print in test1 %(TriggerName) %(TriggerType) with v1=%(v1) v2=%(v2)
pragma dumpvars *


END PROGRAM

//*************************************************************
// InputToKeys_CH_Pro_Throttle_USB_Joy_9_1
// Events: None
//*************************************************************
PROGRAM InputToKeys_CH_Pro_Throttle_USB_Joy_9_1

Rem Autogenerated V1
Key W
Say "Joy 9"

END PROGRAM

PROGRAM DialogS

Set width = 400

Set dvar1c = BBROWSE,Button,Browse,10,10,100,20,"Select file"
Set dvar1d = TBLF,TextBox,"",10,60,300,20

Set dvarok = OK,Button,"OK",In:Bottom,%eval(%(width)-120),4,100,20,"Press for OK"
Set dvarclose = Cancel,Button,"Cancel",In:Bottom,%eval(%(width)-240),4,100,20,"Press for Cancel"

Dialog D1, "Test Dialog", "%(width),250", dvar, TopPanel:32, BottomPanel:32

While D1 $!= Cancel And D1 $!= Escape 
    If D1 $== BBROWSE
        FileDialog openfile,c:,"Log files|*.log|All Files|*.*",*.log,on
        If FileName IsNotEmpty
            DialogControl D1,Set TBLF=%(FileName)
    If D1 $== OK
        DialogControl D1,Get TBLF
        return  %(DialogResult)

    DialogControl D1, Continue
    
    
END PROGRAM

PROGRAM DialogInputBox

InputBox "Caption","V1¦V2¦V3","D1¦D2¦D3","MultiLine,166","T1¦T2¦T3"
set i = 1
while %exist("InputBox%(i)") IsTrue
	set json.Input%(i) = %expand("InputBox%(i)")
    let i = %(i)+1
pragma dumpvars *
END PROGRAM

//*************************************************************
// Key
// Events: None
//*************************************************************
PROGRAM DialogM

Print "Python plugin key press %(ActionPackName) : %(ActionPackFilePath) %(ActionPackFolder)"

set snakepng = %combinepaths(ActionPackFolder,"snake.png")
print Snake png %(snakepng)

Set lab = 10
Set labw = 140
Set col1 = 150
Set col2 = 400
Set col3 = 650
Set colw = 240
Set ls = +30
Set lsm = +40
Set Def = ""

Set width = 1000

Set dvar1a = DGV,dgv,"",Dock:Fill,10,10,10,10,"",100;(text,"Col 1",100),(text,"Col 2",200),(text,"Col 3",300)
Set dvar1b = P1,flowpanel,"",Dock:Top,0,0,1,100,"",Horizontal,"100,64,128,64"

Set dvar1d = DDB,dropdownbutton,File:%(snakepng),In:P1,100,4,48,48,"Drop down","T1;T2",1,1,0,0,32,32;("B1","Button 1",,,Button),("T1","Entry 1"),("T2","Entry 2"),("T3", "Entry 3"),("T4","Entry 4"),("T1;T2","Group 1",,,"Group"),("T3;T4","Group 2",,,"Group")

Set dvarok = OK,Button,"OK",In:Bottom,%eval(%(width)-120),4,100,20,"Press for OK"
Set dvarclose = Cancel,Button,"Cancel",In:Bottom,%eval(%(width)-240),4,100,20,"Press for Cancel"

Dialog D1, "Test Dialog", "%(width),750", dvar, NoShow, TopPanel:32, BottomPanel:32

DialogControl D1, Add B1,Button,"Disable DDB",In:P1,200,4,50,20,"Press for B1"
DialogControl D1, Add B2,Button,"Enable DDB",In:P1,260,4,50,20,"Press for B2"
DialogControl D1, Add B3,Button,"Invisible DDB",In:P1,320,4,50,20,"Press for B3"
DialogControl D1, Add CB1,CheckBox,"CB1",In:P1,320,4,50,20,"CB1"

DialogControl D1, InsertColumns DGV,1;(text,"Insert 1",100,Numeric),(text,"Insert 2",100,Alpha)
DialogControl D1, RightCLickMenu DGV,T1,"Item 1",T2,"Item 2"

set evar1 = B4,Button,"Visible DDB",In:P1,380,4,50,20,"Press for B4"
set evar2 = B5,Button,"ControlBounds",In:P1,440,4,50,20,"Press for B5"
set evar3 = B6,Button,"DDB Size",In:P1,500,4,50,20,"Press for B6"
set evar4 = B7,Button,"RemoveRows",In:P1,560,4,50,20,"Press for B7"
set evar5 = B8,Button,"Clear",In:P1,620,4,50,20,"clear DGV"
set evar6 = B9,Button,"RemoveCol1",In:P1,620,4,50,20,"col1"
DialogControl D1, AddRange evar 
Loop 10,LC
    DialogControl D1, Addsetrows DGV -2,(text,"col 1 %(LC)"),(text,"col 2 %(LC)"),(text,"col 3 %(LC)","Tool tip 3 %(LC)")

DialogControl D1, Show

print Find Col Settings
DialogControl D1, GetColumnsSetting DGV
print CS: `%(ColumnsSetting)`
if %jsonparse(ColumnsSetting,json) IsTrue
    pragma dumpvars json*
    print JP Back: %tojson(json)


DialogControl D1, SetColumnsSetting DGV,%(ColumnsSetting)

DialogControl D1, SetDGVSettings DGV,0,0,1,1
DialogControl D1, SetWordWrap DGV,0

DialogControl D1, Continue

While D1 $!= Cancel And D1 $!= Escape
    pragma dumpvars D1*
    If D1 $== OK
        Break
    If D1 Contains "DropDownButtonClosed:"
        print Closed DDB with %(D1)
    If D1 Contains "DropDownButtonPressed:"
        print Pressed DDB with %(D1)
        dialogcontrol D1,closedropdownbutton
    If D1 $== B1
        print Pressed B1
        dialogcontrol D1,enable DDB 0
    If D1 $== B2
        print Pressed B2
        dialogcontrol D1,enable DDB 1
    If D1 $== B3
        print Pressed B3
        dialogcontrol D1,visible DDB 0
    If D1 $== B4
        print Pressed B4
        dialogcontrol D1,visible DDB 1
    If D1 $== B5
        print Pressed B5
        dialogcontrol D1,controlbounds DDB
        print %(X) %(Y) %(W) %(H)
    If D1 $== B6
        print Pressed B6
        dialogcontrol D1,controlbounds DDB 110,8,64,66
    If D1 $== B7
        print Pressed B7
        dialogcontrol D1,removerows DGV 2,2
    If D1 $== B8
        print Pressed B8
        dialogcontrol D1,clear DGV
    If D1 $== B9
        print Pressed B9
        dialogcontrol D1,removecolumns DGV,1,1
        
    
    DialogControl D1,Continue
 
DialogControl D1, Close

END PROGRAM





//*************************************************************
// Key
// Events: None
//*************************************************************
PROGRAM DialogNM

Set lab = 10
Set labw = 140
Set col1 = 150
Set col2 = 400
Set col3 = 650
Set colw = 240
Set ls = +30
Set lsm = +40
Set width = 1000
Set Def = ""

Set dvar1a = "L2,Label,\"Speech file\",%(lab),%(lsm),%(labw),20,\"\""
Set dvar1b = "TBLF,TextBox,\"%existsdefault(SpeechLog,Def)\",%(col1),+0,%(colw),20,\"Empty means no speech file, else enter the file or use browse\""
Set dvar1c = "BBROWSE,Button,Browse,%(col2),+0,78,20,\"Select file to write speech output to\""

Set dvarok = "OK,Button,\"OK\",%eval(%(width)-140),%(lsm),120,20,\"Press for OK\""
Set dvarcancel = "Cancel,Button,\"Cancel\",%eval(%(width)-280),+0,120,20,\"Press for Cancel\""

NonModalDialog DM, "Test Dialog", "%(width),750", dvar, NoShow

print "Dialog made, no show"

DialogControl DM, Show

END PROGRAM

PROGRAM onNMD

print onNMD %(Dialog) %(Control)

if Control $== Cancel Or Control $== Escape
    DialogControl DM, Close

END PROGRAM



//*************************************************************
// TestFunctions4
//*************************************************************
PROGRAM TestFunctions10

set fred = %ReplaceEscapeChar("hello there\rHow")
print %(fred)

END PROGRAM


